import {
  __dirname,
  __name
} from "../../chunk-GZWC6LYU.js";

// src/events/interactionCreate/whitelistModal.ts
import "dotenv/config";
import minecraftPlayer from "minecraft-player";
import { promises as fs } from "fs";
import { join } from "path";
var whitelistPath = join(__dirname, `${process.env.WHITELIST_PATH}`);
async function whitelistModal_default(interaction) {
  if (!interaction.isModalSubmit())
    return;
  const usernameInput = interaction.fields.getTextInputValue("usernameInput");
  const whitelistData = JSON.parse(await fs.readFile(whitelistPath, "utf8"));
  try {
    const playerData = await minecraftPlayer(usernameInput);
    whitelistData.push({
      uuid: playerData.uuid,
      name: usernameInput
    });
  } catch (error) {
    console.error(
      "Fehler beim Abrufen des Minecraft-Spielers: ",
      usernameInput
    );
    console.log(whitelistPath);
    interaction.reply(
      "Fehler beim Abrufen des Minecraft-Spielers: " + usernameInput + "! \u274C"
    );
    return;
  }
  try {
    await fs.writeFile(whitelistPath, JSON.stringify(whitelistData));
    interaction.reply(usernameInput + "! \u2705");
    console.log(usernameInput + " added to whitelist");
    setTimeout(() => interaction.deleteReply(), 3e3);
  } catch (error) {
    console.error("Fehler beim Schreiben in die Datei: ", error);
    interaction.editReply(
      "Fehler beim Aktualisieren der Whitelist-Datei! \u274C"
    );
  }
}
__name(whitelistModal_default, "default");
export {
  whitelistModal_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2V2ZW50cy9pbnRlcmFjdGlvbkNyZWF0ZS93aGl0ZWxpc3RNb2RhbC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0ICdkb3RlbnYvY29uZmlnJztcclxuXHJcbmltcG9ydCB0eXBlIHsgSW50ZXJhY3Rpb24gfSBmcm9tIFwiZGlzY29yZC5qc1wiO1xyXG5pbXBvcnQgbWluZWNyYWZ0UGxheWVyIGZyb20gXCJtaW5lY3JhZnQtcGxheWVyXCI7XHJcbmltcG9ydCB7IHByb21pc2VzIGFzIGZzIH0gZnJvbSBcImZzXCI7XHJcbmltcG9ydCB7IGpvaW4gfSBmcm9tIFwicGF0aFwiO1xyXG5cclxuY29uc3Qgd2hpdGVsaXN0UGF0aCA9IGpvaW4oX19kaXJuYW1lLCBgJHtwcm9jZXNzLmVudi5XSElURUxJU1RfUEFUSH1gKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIChpbnRlcmFjdGlvbjogSW50ZXJhY3Rpb24pIHtcclxuICBpZiAoIWludGVyYWN0aW9uLmlzTW9kYWxTdWJtaXQoKSkgcmV0dXJuO1xyXG5cclxuICBjb25zdCB1c2VybmFtZUlucHV0ID0gaW50ZXJhY3Rpb24uZmllbGRzLmdldFRleHRJbnB1dFZhbHVlKFwidXNlcm5hbWVJbnB1dFwiKTtcclxuICBjb25zdCB3aGl0ZWxpc3REYXRhID0gSlNPTi5wYXJzZShhd2FpdCBmcy5yZWFkRmlsZSh3aGl0ZWxpc3RQYXRoLCBcInV0ZjhcIikpO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgcGxheWVyRGF0YSA9IGF3YWl0IG1pbmVjcmFmdFBsYXllcih1c2VybmFtZUlucHV0KTtcclxuICAgIHdoaXRlbGlzdERhdGEucHVzaCh7XHJcbiAgICAgIHV1aWQ6IHBsYXllckRhdGEudXVpZCxcclxuICAgICAgbmFtZTogdXNlcm5hbWVJbnB1dCxcclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICBcIkZlaGxlciBiZWltIEFicnVmZW4gZGVzIE1pbmVjcmFmdC1TcGllbGVyczogXCIsXHJcbiAgICAgIHVzZXJuYW1lSW5wdXRcclxuICAgICk7XHJcbiAgICBjb25zb2xlLmxvZyh3aGl0ZWxpc3RQYXRoKVxyXG4gICAgaW50ZXJhY3Rpb24ucmVwbHkoXHJcbiAgICAgIFwiRmVobGVyIGJlaW0gQWJydWZlbiBkZXMgTWluZWNyYWZ0LVNwaWVsZXJzOiBcIiArXHJcbiAgICAgICAgdXNlcm5hbWVJbnB1dCArXHJcbiAgICAgICAgXCIhIFxcdTI3NENcIlxyXG4gICAgKTtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBmcy53cml0ZUZpbGUod2hpdGVsaXN0UGF0aCwgSlNPTi5zdHJpbmdpZnkod2hpdGVsaXN0RGF0YSkpO1xyXG4gICAgaW50ZXJhY3Rpb24ucmVwbHkodXNlcm5hbWVJbnB1dCArIFwiISBcXHUyNzA1XCIpO1xyXG4gICAgY29uc29sZS5sb2codXNlcm5hbWVJbnB1dCArIFwiIGFkZGVkIHRvIHdoaXRlbGlzdFwiKTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IGludGVyYWN0aW9uLmRlbGV0ZVJlcGx5KCksIDMwMDApO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKFwiRmVobGVyIGJlaW0gU2NocmVpYmVuIGluIGRpZSBEYXRlaTogXCIsIGVycm9yKTtcclxuICAgIGludGVyYWN0aW9uLmVkaXRSZXBseShcclxuICAgICAgXCJGZWhsZXIgYmVpbSBBa3R1YWxpc2llcmVuIGRlciBXaGl0ZWxpc3QtRGF0ZWkhIFxcdTI3NENcIlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7O0FBQUEsT0FBTztBQUdQLE9BQU8scUJBQXFCO0FBQzVCLFNBQVMsWUFBWSxVQUFVO0FBQy9CLFNBQVMsWUFBWTtBQUVyQixJQUFNLGdCQUFnQixLQUFLLFdBQVcsR0FBRyxRQUFRLElBQUksY0FBYyxFQUFFO0FBRXJFLGVBQU8sdUJBQXdCLGFBQTBCO0FBQ3ZELE1BQUksQ0FBQyxZQUFZLGNBQWM7QUFBRztBQUVsQyxRQUFNLGdCQUFnQixZQUFZLE9BQU8sa0JBQWtCLGVBQWU7QUFDMUUsUUFBTSxnQkFBZ0IsS0FBSyxNQUFNLE1BQU0sR0FBRyxTQUFTLGVBQWUsTUFBTSxDQUFDO0FBRXpFLE1BQUk7QUFDRixVQUFNLGFBQWEsTUFBTSxnQkFBZ0IsYUFBYTtBQUN0RCxrQkFBYyxLQUFLO0FBQUEsTUFDakIsTUFBTSxXQUFXO0FBQUEsTUFDakIsTUFBTTtBQUFBLElBQ1IsQ0FBQztBQUFBLEVBQ0gsU0FBUyxPQUFPO0FBQ2QsWUFBUTtBQUFBLE1BQ047QUFBQSxNQUNBO0FBQUEsSUFDRjtBQUNBLFlBQVEsSUFBSSxhQUFhO0FBQ3pCLGdCQUFZO0FBQUEsTUFDVixpREFDRSxnQkFDQTtBQUFBLElBQ0o7QUFDQTtBQUFBLEVBQ0Y7QUFFQSxNQUFJO0FBQ0YsVUFBTSxHQUFHLFVBQVUsZUFBZSxLQUFLLFVBQVUsYUFBYSxDQUFDO0FBQy9ELGdCQUFZLE1BQU0sZ0JBQWdCLFVBQVU7QUFDNUMsWUFBUSxJQUFJLGdCQUFnQixxQkFBcUI7QUFFakQsZUFBVyxNQUFNLFlBQVksWUFBWSxHQUFHLEdBQUk7QUFBQSxFQUNsRCxTQUFTLE9BQU87QUFDZCxZQUFRLE1BQU0sd0NBQXdDLEtBQUs7QUFDM0QsZ0JBQVk7QUFBQSxNQUNWO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFDRjtBQXRDTzsiLAogICJuYW1lcyI6IFtdCn0K