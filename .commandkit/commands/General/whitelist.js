import {
  __dirname,
  __name
} from "../../chunk-GZWC6LYU.js";

// src/commands/General/whitelist.ts
import { SlashCommandBuilder } from "discord.js";
import { promises as fs } from "fs";
import minecraftPlayer from "minecraft-player";
var data = new SlashCommandBuilder().setName("whitelist").setDescription("Whitelist a user").addStringOption(
  (option) => option.setName("username").setDescription("Username to whitelist.").setRequired(true)
);
async function run({ interaction, client, handler }) {
  const username = interaction.options.getString("username") || "";
  const whitelistJson = await fs.readFile(
    __dirname + "/../../whitelist.json",
    "utf8"
  );
  const whitelistData = JSON.parse(whitelistJson);
  try {
    const playerData = await minecraftPlayer(username);
    whitelistData.push({
      uuid: playerData.uuid,
      name: username
    });
  } catch (error) {
    console.error("Fehler beim Abrufen des Minecraft-Spielers: ", username);
    interaction.reply("Fehler beim Abrufen des Minecraft-Spielers: " + username + "! \u274C");
    return;
  }
  fs.writeFile(
    __dirname + "/../../whitelist.json",
    JSON.stringify(whitelistData)
  );
  interaction.reply(username + "! \u2705");
}
__name(run, "run");
var options = {};
export {
  data,
  options,
  run
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2NvbW1hbmRzL0dlbmVyYWwvd2hpdGVsaXN0LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgdHlwZSB7XHJcbiAgQ29tbWFuZERhdGEsXHJcbiAgU2xhc2hDb21tYW5kUHJvcHMsXHJcbiAgQ29tbWFuZE9wdGlvbnMsXHJcbn0gZnJvbSBcImNvbW1hbmRraXRcIjtcclxuaW1wb3J0IHsgU2xhc2hDb21tYW5kQnVpbGRlciB9IGZyb20gXCJkaXNjb3JkLmpzXCI7XHJcbmltcG9ydCB7IHByb21pc2VzIGFzIGZzIH0gZnJvbSBcImZzXCI7XHJcbmltcG9ydCBtaW5lY3JhZnRQbGF5ZXIgZnJvbSBcIm1pbmVjcmFmdC1wbGF5ZXJcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBkYXRhID0gbmV3IFNsYXNoQ29tbWFuZEJ1aWxkZXIoKVxyXG4gIC5zZXROYW1lKFwid2hpdGVsaXN0XCIpXHJcbiAgLnNldERlc2NyaXB0aW9uKFwiV2hpdGVsaXN0IGEgdXNlclwiKVxyXG4gIC5hZGRTdHJpbmdPcHRpb24oKG9wdGlvbikgPT5cclxuICAgIG9wdGlvblxyXG4gICAgICAuc2V0TmFtZShcInVzZXJuYW1lXCIpXHJcbiAgICAgIC5zZXREZXNjcmlwdGlvbihcIlVzZXJuYW1lIHRvIHdoaXRlbGlzdC5cIilcclxuICAgICAgLnNldFJlcXVpcmVkKHRydWUpXHJcbiAgKTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBydW4oeyBpbnRlcmFjdGlvbiwgY2xpZW50LCBoYW5kbGVyIH06IFNsYXNoQ29tbWFuZFByb3BzKSB7XHJcbiAgY29uc3QgdXNlcm5hbWUgPSBpbnRlcmFjdGlvbi5vcHRpb25zLmdldFN0cmluZyhcInVzZXJuYW1lXCIpIHx8IFwiXCI7XHJcblxyXG4gIGNvbnN0IHdoaXRlbGlzdEpzb24gPSBhd2FpdCBmcy5yZWFkRmlsZShcclxuICAgIF9fZGlybmFtZSArIFwiLy4uLy4uL3doaXRlbGlzdC5qc29uXCIsXHJcbiAgICBcInV0ZjhcIlxyXG4gICk7XHJcblxyXG4gIGNvbnN0IHdoaXRlbGlzdERhdGEgPSBKU09OLnBhcnNlKHdoaXRlbGlzdEpzb24pO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgcGxheWVyRGF0YSA9IGF3YWl0IG1pbmVjcmFmdFBsYXllcih1c2VybmFtZSk7XHJcbiAgICB3aGl0ZWxpc3REYXRhLnB1c2goe1xyXG4gICAgICB1dWlkOiBwbGF5ZXJEYXRhLnV1aWQsXHJcbiAgICAgIG5hbWU6IHVzZXJuYW1lLFxyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJGZWhsZXIgYmVpbSBBYnJ1ZmVuIGRlcyBNaW5lY3JhZnQtU3BpZWxlcnM6IFwiLCB1c2VybmFtZSk7XHJcbiAgICBpbnRlcmFjdGlvbi5yZXBseShcIkZlaGxlciBiZWltIEFicnVmZW4gZGVzIE1pbmVjcmFmdC1TcGllbGVyczogXCIgKyB1c2VybmFtZSArIFwiISBcdTI3NENcIik7XHJcbiAgICByZXR1cm5cclxuICB9XHJcblxyXG4gIGZzLndyaXRlRmlsZShcclxuICAgIF9fZGlybmFtZSArIFwiLy4uLy4uL3doaXRlbGlzdC5qc29uXCIsXHJcbiAgICBKU09OLnN0cmluZ2lmeSh3aGl0ZWxpc3REYXRhKVxyXG4gICk7XHJcblxyXG4gIGludGVyYWN0aW9uLnJlcGx5KHVzZXJuYW1lICsgXCIhIFx1MjcwNVwiKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IG9wdGlvbnM6IENvbW1hbmRPcHRpb25zID0ge307XHJcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7OztBQUtBLFNBQVMsMkJBQTJCO0FBQ3BDLFNBQVMsWUFBWSxVQUFVO0FBQy9CLE9BQU8scUJBQXFCO0FBRXJCLElBQU0sT0FBTyxJQUFJLG9CQUFvQixFQUN6QyxRQUFRLFdBQVcsRUFDbkIsZUFBZSxrQkFBa0IsRUFDakM7QUFBQSxFQUFnQixDQUFDLFdBQ2hCLE9BQ0csUUFBUSxVQUFVLEVBQ2xCLGVBQWUsd0JBQXdCLEVBQ3ZDLFlBQVksSUFBSTtBQUNyQjtBQUVGLGVBQXNCLElBQUksRUFBRSxhQUFhLFFBQVEsUUFBUSxHQUFzQjtBQUM3RSxRQUFNLFdBQVcsWUFBWSxRQUFRLFVBQVUsVUFBVSxLQUFLO0FBRTlELFFBQU0sZ0JBQWdCLE1BQU0sR0FBRztBQUFBLElBQzdCLFlBQVk7QUFBQSxJQUNaO0FBQUEsRUFDRjtBQUVBLFFBQU0sZ0JBQWdCLEtBQUssTUFBTSxhQUFhO0FBRTlDLE1BQUk7QUFDRixVQUFNLGFBQWEsTUFBTSxnQkFBZ0IsUUFBUTtBQUNqRCxrQkFBYyxLQUFLO0FBQUEsTUFDakIsTUFBTSxXQUFXO0FBQUEsTUFDakIsTUFBTTtBQUFBLElBQ1IsQ0FBQztBQUFBLEVBQ0gsU0FBUyxPQUFPO0FBQ2QsWUFBUSxNQUFNLGdEQUFnRCxRQUFRO0FBQ3RFLGdCQUFZLE1BQU0saURBQWlELFdBQVcsVUFBSztBQUNuRjtBQUFBLEVBQ0Y7QUFFQSxLQUFHO0FBQUEsSUFDRCxZQUFZO0FBQUEsSUFDWixLQUFLLFVBQVUsYUFBYTtBQUFBLEVBQzlCO0FBRUEsY0FBWSxNQUFNLFdBQVcsVUFBSztBQUNwQztBQTVCc0I7QUE4QmYsSUFBTSxVQUEwQixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=